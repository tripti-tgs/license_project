"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.isDecompressionError = exports.decompressResponse = void 0;
const stream_1 = __importDefault(require("stream"));
const zlib_1 = __importDefault(require("zlib"));
function decompressResponse(response) {
    const encoding = response.headers['content-encoding'];
    if (encoding === 'gzip') {
        return {
            response: stream_1.default.pipeline(response, zlib_1.default.createGunzip(), function pipelineCb(err) {
                if (err) {
                    // FIXME: use logger instead
                    // eslint-disable-next-line no-console
                    console.error(err);
                }
            }),
        };
    }
    else if (encoding !== undefined) {
        return {
            error: new Error(`Unexpected encoding: ${encoding}`),
        };
    }
    return { response };
}
exports.decompressResponse = decompressResponse;
function isDecompressionError(result) {
    return result.error !== undefined;
}
exports.isDecompressionError = isDecompressionError;
//# sourceMappingURL=compression.js.map